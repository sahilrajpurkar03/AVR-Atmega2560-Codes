
Stepper_a4988.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000252  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001fe  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000252  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000284  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  000002c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b5d  00000000  00000000  00000300  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008d8  00000000  00000000  00000e5d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003a0  00000000  00000000  00001735  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b0  00000000  00000000  00001ad8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000494  00000000  00000000  00001b88  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000390  00000000  00000000  0000201c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  000023ac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	42 d0       	rcall	.+132    	; 0x11e <main>
  9a:	af c0       	rjmp	.+350    	; 0x1fa <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <stepper_clockwise>:
	DDRA=0xFF;				//stepper	
}

void stepper_clockwise(int angle)
{
	stepper_port&=~(1<<ms1)&(1<<ms2)&(1<<ms3);
  9e:	2b b3       	in	r18, 0x1b	; 27
  a0:	1b ba       	out	0x1b, r1	; 27
	stepper_port|=(1<<dir_pin);
  a2:	d9 9a       	sbi	0x1b, 1	; 27
	int actual_angle=map_value(angle,0,360,0,200);
  a4:	28 ec       	ldi	r18, 0xC8	; 200
  a6:	30 e0       	ldi	r19, 0x00	; 0
  a8:	dc 01       	movw	r26, r24
  aa:	70 d0       	rcall	.+224    	; 0x18c <__usmulhisi3>
  ac:	28 e6       	ldi	r18, 0x68	; 104
  ae:	31 e0       	ldi	r19, 0x01	; 1
  b0:	40 e0       	ldi	r20, 0x00	; 0
  b2:	50 e0       	ldi	r21, 0x00	; 0
  b4:	4f d0       	rcall	.+158    	; 0x154 <__divmodsi4>
	for (int i=0;i<actual_angle;i++)
  b6:	12 16       	cp	r1, r18
  b8:	13 06       	cpc	r1, r19
  ba:	84 f4       	brge	.+32     	; 0xdc <stepper_clockwise+0x3e>
  bc:	80 e0       	ldi	r24, 0x00	; 0
  be:	90 e0       	ldi	r25, 0x00	; 0
	{
		stepper_port|=(1<<step_pin);
  c0:	d8 9a       	sbi	0x1b, 0	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c2:	e3 e3       	ldi	r30, 0x33	; 51
  c4:	f7 e0       	ldi	r31, 0x07	; 7
  c6:	31 97       	sbiw	r30, 0x01	; 1
  c8:	f1 f7       	brne	.-4      	; 0xc6 <stepper_clockwise+0x28>
		_delay_us(500);
		stepper_port&=~(1<<step_pin);
  ca:	d8 98       	cbi	0x1b, 0	; 27
  cc:	e3 e3       	ldi	r30, 0x33	; 51
  ce:	f7 e0       	ldi	r31, 0x07	; 7
  d0:	31 97       	sbiw	r30, 0x01	; 1
  d2:	f1 f7       	brne	.-4      	; 0xd0 <stepper_clockwise+0x32>
void stepper_clockwise(int angle)
{
	stepper_port&=~(1<<ms1)&(1<<ms2)&(1<<ms3);
	stepper_port|=(1<<dir_pin);
	int actual_angle=map_value(angle,0,360,0,200);
	for (int i=0;i<actual_angle;i++)
  d4:	01 96       	adiw	r24, 0x01	; 1
  d6:	82 17       	cp	r24, r18
  d8:	93 07       	cpc	r25, r19
  da:	94 f3       	brlt	.-28     	; 0xc0 <stepper_clockwise+0x22>
  dc:	08 95       	ret

000000de <stepper_anticlockwisw>:
	}	
}

void stepper_anticlockwisw(int angle)
{
	stepper_port&=~(1<<ms1)&(1<<ms2)&(1<<ms3);
  de:	2b b3       	in	r18, 0x1b	; 27
  e0:	1b ba       	out	0x1b, r1	; 27
	stepper_port&=~(1<<dir_pin);
  e2:	d9 98       	cbi	0x1b, 1	; 27
	int actual_angle=map_value(angle,0,360,0,200);
  e4:	28 ec       	ldi	r18, 0xC8	; 200
  e6:	30 e0       	ldi	r19, 0x00	; 0
  e8:	dc 01       	movw	r26, r24
  ea:	50 d0       	rcall	.+160    	; 0x18c <__usmulhisi3>
  ec:	28 e6       	ldi	r18, 0x68	; 104
  ee:	31 e0       	ldi	r19, 0x01	; 1
  f0:	40 e0       	ldi	r20, 0x00	; 0
  f2:	50 e0       	ldi	r21, 0x00	; 0
  f4:	2f d0       	rcall	.+94     	; 0x154 <__divmodsi4>
	for (int i=0;i<actual_angle;i++)
  f6:	12 16       	cp	r1, r18
  f8:	13 06       	cpc	r1, r19
  fa:	84 f4       	brge	.+32     	; 0x11c <stepper_anticlockwisw+0x3e>
  fc:	80 e0       	ldi	r24, 0x00	; 0
  fe:	90 e0       	ldi	r25, 0x00	; 0
	{
		stepper_port|=(1<<step_pin);
 100:	d8 9a       	sbi	0x1b, 0	; 27
 102:	e3 e3       	ldi	r30, 0x33	; 51
 104:	f7 e0       	ldi	r31, 0x07	; 7
 106:	31 97       	sbiw	r30, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <stepper_anticlockwisw+0x28>
		_delay_us(500);
		stepper_port&=~(1<<step_pin);
 10a:	d8 98       	cbi	0x1b, 0	; 27
 10c:	e3 e3       	ldi	r30, 0x33	; 51
 10e:	f7 e0       	ldi	r31, 0x07	; 7
 110:	31 97       	sbiw	r30, 0x01	; 1
 112:	f1 f7       	brne	.-4      	; 0x110 <stepper_anticlockwisw+0x32>
void stepper_anticlockwisw(int angle)
{
	stepper_port&=~(1<<ms1)&(1<<ms2)&(1<<ms3);
	stepper_port&=~(1<<dir_pin);
	int actual_angle=map_value(angle,0,360,0,200);
	for (int i=0;i<actual_angle;i++)
 114:	01 96       	adiw	r24, 0x01	; 1
 116:	82 17       	cp	r24, r18
 118:	93 07       	cpc	r25, r19
 11a:	94 f3       	brlt	.-28     	; 0x100 <stepper_anticlockwisw+0x22>
 11c:	08 95       	ret

0000011e <main>:
    }
}

void port_init()
{
	DDRA=0xFF;				//stepper	
 11e:	8f ef       	ldi	r24, 0xFF	; 255
 120:	8a bb       	out	0x1a, r24	; 26
int main(void)
{
	port_init();
    while (1) 
    {
		stepper_clockwise(90);
 122:	8a e5       	ldi	r24, 0x5A	; 90
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	bb df       	rcall	.-138    	; 0x9e <stepper_clockwise>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 128:	2f ef       	ldi	r18, 0xFF	; 255
 12a:	8f ef       	ldi	r24, 0xFF	; 255
 12c:	9c e2       	ldi	r25, 0x2C	; 44
 12e:	21 50       	subi	r18, 0x01	; 1
 130:	80 40       	sbci	r24, 0x00	; 0
 132:	90 40       	sbci	r25, 0x00	; 0
 134:	e1 f7       	brne	.-8      	; 0x12e <main+0x10>
 136:	00 c0       	rjmp	.+0      	; 0x138 <main+0x1a>
 138:	00 00       	nop
		_delay_ms(1000);
		stepper_anticlockwisw(90);
 13a:	8a e5       	ldi	r24, 0x5A	; 90
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	cf df       	rcall	.-98     	; 0xde <stepper_anticlockwisw>
 140:	2f ef       	ldi	r18, 0xFF	; 255
 142:	8f ef       	ldi	r24, 0xFF	; 255
 144:	9c e2       	ldi	r25, 0x2C	; 44
 146:	21 50       	subi	r18, 0x01	; 1
 148:	80 40       	sbci	r24, 0x00	; 0
 14a:	90 40       	sbci	r25, 0x00	; 0
 14c:	e1 f7       	brne	.-8      	; 0x146 <main+0x28>
 14e:	00 c0       	rjmp	.+0      	; 0x150 <main+0x32>
 150:	00 00       	nop
 152:	e7 cf       	rjmp	.-50     	; 0x122 <main+0x4>

00000154 <__divmodsi4>:
 154:	05 2e       	mov	r0, r21
 156:	97 fb       	bst	r25, 7
 158:	16 f4       	brtc	.+4      	; 0x15e <__divmodsi4+0xa>
 15a:	00 94       	com	r0
 15c:	0f d0       	rcall	.+30     	; 0x17c <__negsi2>
 15e:	57 fd       	sbrc	r21, 7
 160:	05 d0       	rcall	.+10     	; 0x16c <__divmodsi4_neg2>
 162:	1a d0       	rcall	.+52     	; 0x198 <__udivmodsi4>
 164:	07 fc       	sbrc	r0, 7
 166:	02 d0       	rcall	.+4      	; 0x16c <__divmodsi4_neg2>
 168:	46 f4       	brtc	.+16     	; 0x17a <__divmodsi4_exit>
 16a:	08 c0       	rjmp	.+16     	; 0x17c <__negsi2>

0000016c <__divmodsi4_neg2>:
 16c:	50 95       	com	r21
 16e:	40 95       	com	r20
 170:	30 95       	com	r19
 172:	21 95       	neg	r18
 174:	3f 4f       	sbci	r19, 0xFF	; 255
 176:	4f 4f       	sbci	r20, 0xFF	; 255
 178:	5f 4f       	sbci	r21, 0xFF	; 255

0000017a <__divmodsi4_exit>:
 17a:	08 95       	ret

0000017c <__negsi2>:
 17c:	90 95       	com	r25
 17e:	80 95       	com	r24
 180:	70 95       	com	r23
 182:	61 95       	neg	r22
 184:	7f 4f       	sbci	r23, 0xFF	; 255
 186:	8f 4f       	sbci	r24, 0xFF	; 255
 188:	9f 4f       	sbci	r25, 0xFF	; 255
 18a:	08 95       	ret

0000018c <__usmulhisi3>:
 18c:	27 d0       	rcall	.+78     	; 0x1dc <__umulhisi3>

0000018e <__usmulhisi3_tail>:
 18e:	b7 ff       	sbrs	r27, 7
 190:	08 95       	ret
 192:	82 1b       	sub	r24, r18
 194:	93 0b       	sbc	r25, r19
 196:	08 95       	ret

00000198 <__udivmodsi4>:
 198:	a1 e2       	ldi	r26, 0x21	; 33
 19a:	1a 2e       	mov	r1, r26
 19c:	aa 1b       	sub	r26, r26
 19e:	bb 1b       	sub	r27, r27
 1a0:	fd 01       	movw	r30, r26
 1a2:	0d c0       	rjmp	.+26     	; 0x1be <__udivmodsi4_ep>

000001a4 <__udivmodsi4_loop>:
 1a4:	aa 1f       	adc	r26, r26
 1a6:	bb 1f       	adc	r27, r27
 1a8:	ee 1f       	adc	r30, r30
 1aa:	ff 1f       	adc	r31, r31
 1ac:	a2 17       	cp	r26, r18
 1ae:	b3 07       	cpc	r27, r19
 1b0:	e4 07       	cpc	r30, r20
 1b2:	f5 07       	cpc	r31, r21
 1b4:	20 f0       	brcs	.+8      	; 0x1be <__udivmodsi4_ep>
 1b6:	a2 1b       	sub	r26, r18
 1b8:	b3 0b       	sbc	r27, r19
 1ba:	e4 0b       	sbc	r30, r20
 1bc:	f5 0b       	sbc	r31, r21

000001be <__udivmodsi4_ep>:
 1be:	66 1f       	adc	r22, r22
 1c0:	77 1f       	adc	r23, r23
 1c2:	88 1f       	adc	r24, r24
 1c4:	99 1f       	adc	r25, r25
 1c6:	1a 94       	dec	r1
 1c8:	69 f7       	brne	.-38     	; 0x1a4 <__udivmodsi4_loop>
 1ca:	60 95       	com	r22
 1cc:	70 95       	com	r23
 1ce:	80 95       	com	r24
 1d0:	90 95       	com	r25
 1d2:	9b 01       	movw	r18, r22
 1d4:	ac 01       	movw	r20, r24
 1d6:	bd 01       	movw	r22, r26
 1d8:	cf 01       	movw	r24, r30
 1da:	08 95       	ret

000001dc <__umulhisi3>:
 1dc:	a2 9f       	mul	r26, r18
 1de:	b0 01       	movw	r22, r0
 1e0:	b3 9f       	mul	r27, r19
 1e2:	c0 01       	movw	r24, r0
 1e4:	a3 9f       	mul	r26, r19
 1e6:	70 0d       	add	r23, r0
 1e8:	81 1d       	adc	r24, r1
 1ea:	11 24       	eor	r1, r1
 1ec:	91 1d       	adc	r25, r1
 1ee:	b2 9f       	mul	r27, r18
 1f0:	70 0d       	add	r23, r0
 1f2:	81 1d       	adc	r24, r1
 1f4:	11 24       	eor	r1, r1
 1f6:	91 1d       	adc	r25, r1
 1f8:	08 95       	ret

000001fa <_exit>:
 1fa:	f8 94       	cli

000001fc <__stop_program>:
 1fc:	ff cf       	rjmp	.-2      	; 0x1fc <__stop_program>
