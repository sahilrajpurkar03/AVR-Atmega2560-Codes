
button_module.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000002a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000022c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  00800200  00800200  000002a0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002a0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002d0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000310  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d6e  00000000  00000000  00000340  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c43  00000000  00000000  000010ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000428  00000000  00000000  00001cf1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000068  00000000  00000000  0000211c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005b3  00000000  00000000  00002184  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000da  00000000  00000000  00002737  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00002811  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	81 c0       	rjmp	.+258    	; 0x108 <__bad_interrupt>
   6:	00 00       	nop
   8:	7f c0       	rjmp	.+254    	; 0x108 <__bad_interrupt>
   a:	00 00       	nop
   c:	7d c0       	rjmp	.+250    	; 0x108 <__bad_interrupt>
   e:	00 00       	nop
  10:	7b c0       	rjmp	.+246    	; 0x108 <__bad_interrupt>
  12:	00 00       	nop
  14:	79 c0       	rjmp	.+242    	; 0x108 <__bad_interrupt>
  16:	00 00       	nop
  18:	77 c0       	rjmp	.+238    	; 0x108 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	75 c0       	rjmp	.+234    	; 0x108 <__bad_interrupt>
  1e:	00 00       	nop
  20:	73 c0       	rjmp	.+230    	; 0x108 <__bad_interrupt>
  22:	00 00       	nop
  24:	71 c0       	rjmp	.+226    	; 0x108 <__bad_interrupt>
  26:	00 00       	nop
  28:	6f c0       	rjmp	.+222    	; 0x108 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	6d c0       	rjmp	.+218    	; 0x108 <__bad_interrupt>
  2e:	00 00       	nop
  30:	6b c0       	rjmp	.+214    	; 0x108 <__bad_interrupt>
  32:	00 00       	nop
  34:	69 c0       	rjmp	.+210    	; 0x108 <__bad_interrupt>
  36:	00 00       	nop
  38:	67 c0       	rjmp	.+206    	; 0x108 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	65 c0       	rjmp	.+202    	; 0x108 <__bad_interrupt>
  3e:	00 00       	nop
  40:	63 c0       	rjmp	.+198    	; 0x108 <__bad_interrupt>
  42:	00 00       	nop
  44:	61 c0       	rjmp	.+194    	; 0x108 <__bad_interrupt>
  46:	00 00       	nop
  48:	5f c0       	rjmp	.+190    	; 0x108 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	5d c0       	rjmp	.+186    	; 0x108 <__bad_interrupt>
  4e:	00 00       	nop
  50:	5b c0       	rjmp	.+182    	; 0x108 <__bad_interrupt>
  52:	00 00       	nop
  54:	59 c0       	rjmp	.+178    	; 0x108 <__bad_interrupt>
  56:	00 00       	nop
  58:	57 c0       	rjmp	.+174    	; 0x108 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	55 c0       	rjmp	.+170    	; 0x108 <__bad_interrupt>
  5e:	00 00       	nop
  60:	53 c0       	rjmp	.+166    	; 0x108 <__bad_interrupt>
  62:	00 00       	nop
  64:	51 c0       	rjmp	.+162    	; 0x108 <__bad_interrupt>
  66:	00 00       	nop
  68:	4f c0       	rjmp	.+158    	; 0x108 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	4d c0       	rjmp	.+154    	; 0x108 <__bad_interrupt>
  6e:	00 00       	nop
  70:	4b c0       	rjmp	.+150    	; 0x108 <__bad_interrupt>
  72:	00 00       	nop
  74:	49 c0       	rjmp	.+146    	; 0x108 <__bad_interrupt>
  76:	00 00       	nop
  78:	47 c0       	rjmp	.+142    	; 0x108 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	45 c0       	rjmp	.+138    	; 0x108 <__bad_interrupt>
  7e:	00 00       	nop
  80:	43 c0       	rjmp	.+134    	; 0x108 <__bad_interrupt>
  82:	00 00       	nop
  84:	41 c0       	rjmp	.+130    	; 0x108 <__bad_interrupt>
  86:	00 00       	nop
  88:	3f c0       	rjmp	.+126    	; 0x108 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	3d c0       	rjmp	.+122    	; 0x108 <__bad_interrupt>
  8e:	00 00       	nop
  90:	3b c0       	rjmp	.+118    	; 0x108 <__bad_interrupt>
  92:	00 00       	nop
  94:	39 c0       	rjmp	.+114    	; 0x108 <__bad_interrupt>
  96:	00 00       	nop
  98:	37 c0       	rjmp	.+110    	; 0x108 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	35 c0       	rjmp	.+106    	; 0x108 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	33 c0       	rjmp	.+102    	; 0x108 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	31 c0       	rjmp	.+98     	; 0x108 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	2f c0       	rjmp	.+94     	; 0x108 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	2d c0       	rjmp	.+90     	; 0x108 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	2b c0       	rjmp	.+86     	; 0x108 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	29 c0       	rjmp	.+82     	; 0x108 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	27 c0       	rjmp	.+78     	; 0x108 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	25 c0       	rjmp	.+74     	; 0x108 <__bad_interrupt>
  be:	00 00       	nop
  c0:	23 c0       	rjmp	.+70     	; 0x108 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	21 c0       	rjmp	.+66     	; 0x108 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	1f c0       	rjmp	.+62     	; 0x108 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	1d c0       	rjmp	.+58     	; 0x108 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	1b c0       	rjmp	.+54     	; 0x108 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	19 c0       	rjmp	.+50     	; 0x108 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	17 c0       	rjmp	.+46     	; 0x108 <__bad_interrupt>
  da:	00 00       	nop
  dc:	15 c0       	rjmp	.+42     	; 0x108 <__bad_interrupt>
  de:	00 00       	nop
  e0:	13 c0       	rjmp	.+38     	; 0x108 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
  f4:	22 e0       	ldi	r18, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.do_clear_bss_start>

000000fc <.do_clear_bss_loop>:
  fc:	1d 92       	st	X+, r1

000000fe <.do_clear_bss_start>:
  fe:	a8 31       	cpi	r26, 0x18	; 24
 100:	b2 07       	cpc	r27, r18
 102:	e1 f7       	brne	.-8      	; 0xfc <.do_clear_bss_loop>
 104:	8e d0       	rcall	.+284    	; 0x222 <main>
 106:	90 c0       	rjmp	.+288    	; 0x228 <_exit>

00000108 <__bad_interrupt>:
 108:	7b cf       	rjmp	.-266    	; 0x0 <__vectors>

0000010a <port_init>:
    }
}

void port_init()
{
	DDRE=0x00;						//button module
 10a:	1d b8       	out	0x0d, r1	; 13
	DDRA=0xFF;						//indicator_1
 10c:	8f ef       	ldi	r24, 0xFF	; 255
 10e:	81 b9       	out	0x01, r24	; 1
 110:	08 95       	ret

00000112 <readport>:
}

void readport()
{
 112:	df 92       	push	r13
 114:	ef 92       	push	r14
 116:	ff 92       	push	r15
 118:	0f 93       	push	r16
 11a:	1f 93       	push	r17
 11c:	cf 93       	push	r28
 11e:	df 93       	push	r29
 120:	e0 e1       	ldi	r30, 0x10	; 16
 122:	f2 e0       	ldi	r31, 0x02	; 2
 124:	a8 e0       	ldi	r26, 0x08	; 8
 126:	b2 e0       	ldi	r27, 0x02	; 2
 128:	0f 2e       	mov	r0, r31
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	ef 2e       	mov	r14, r31
 12e:	f2 e0       	ldi	r31, 0x02	; 2
 130:	ff 2e       	mov	r15, r31
 132:	f0 2d       	mov	r31, r0
	for (int i=0;i<8;i++)
 134:	20 e0       	ldi	r18, 0x00	; 0
 136:	30 e0       	ldi	r19, 0x00	; 0
	{
		pres_butt[i]=(buttonport & (1<<i));
 138:	01 e0       	ldi	r16, 0x01	; 1
 13a:	10 e0       	ldi	r17, 0x00	; 0
		{
			_delay_ms(5);
			pres_butt[i]=(buttonport & (1<<i));
			if ((pres_butt[i]) && (!prev_butt[i]))
			{
				button[i]=1;
 13c:	dd 24       	eor	r13, r13
 13e:	d3 94       	inc	r13

void readport()
{
	for (int i=0;i<8;i++)
	{
		pres_butt[i]=(buttonport & (1<<i));
 140:	8c b1       	in	r24, 0x0c	; 12
 142:	a8 01       	movw	r20, r16
 144:	02 2e       	mov	r0, r18
 146:	02 c0       	rjmp	.+4      	; 0x14c <readport+0x3a>
 148:	44 0f       	add	r20, r20
 14a:	55 1f       	adc	r21, r21
 14c:	0a 94       	dec	r0
 14e:	e2 f7       	brpl	.-8      	; 0x148 <readport+0x36>
 150:	84 23       	and	r24, r20
 152:	bf 01       	movw	r22, r30
 154:	80 83       	st	Z, r24
		if (pres_butt[i])
 156:	88 23       	and	r24, r24
 158:	81 f0       	breq	.+32     	; 0x17a <readport+0x68>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 15a:	8f ef       	ldi	r24, 0xFF	; 255
 15c:	97 e4       	ldi	r25, 0x47	; 71
 15e:	01 97       	sbiw	r24, 0x01	; 1
 160:	f1 f7       	brne	.-4      	; 0x15e <readport+0x4c>
 162:	00 c0       	rjmp	.+0      	; 0x164 <readport+0x52>
 164:	00 00       	nop
		{
			_delay_ms(5);
			pres_butt[i]=(buttonport & (1<<i));
 166:	8c b1       	in	r24, 0x0c	; 12
 168:	48 23       	and	r20, r24
 16a:	40 83       	st	Z, r20
			if ((pres_butt[i]) && (!prev_butt[i]))
 16c:	44 23       	and	r20, r20
 16e:	29 f0       	breq	.+10     	; 0x17a <readport+0x68>
 170:	8c 91       	ld	r24, X
 172:	81 11       	cpse	r24, r1
 174:	02 c0       	rjmp	.+4      	; 0x17a <readport+0x68>
			{
				button[i]=1;
 176:	e7 01       	movw	r28, r14
 178:	d8 82       	st	Y, r13
 17a:	31 96       	adiw	r30, 0x01	; 1
			}
		}
		prev_butt[i]=pres_butt[i];
 17c:	eb 01       	movw	r28, r22
 17e:	88 81       	ld	r24, Y
 180:	8d 93       	st	X+, r24
	DDRA=0xFF;						//indicator_1
}

void readport()
{
	for (int i=0;i<8;i++)
 182:	2f 5f       	subi	r18, 0xFF	; 255
 184:	3f 4f       	sbci	r19, 0xFF	; 255
 186:	df ef       	ldi	r29, 0xFF	; 255
 188:	ed 1a       	sub	r14, r29
 18a:	fd 0a       	sbc	r15, r29
 18c:	28 30       	cpi	r18, 0x08	; 8
 18e:	31 05       	cpc	r19, r1
 190:	b9 f6       	brne	.-82     	; 0x140 <readport+0x2e>
			}
		}
		prev_butt[i]=pres_butt[i];
	}
	
	if (button[0])
 192:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <_edata>
 196:	88 23       	and	r24, r24
 198:	21 f0       	breq	.+8      	; 0x1a2 <readport+0x90>
	{
		indicator_1=0x01;
 19a:	81 e0       	ldi	r24, 0x01	; 1
 19c:	82 b9       	out	0x02, r24	; 2
		button[0]=0;
 19e:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <_edata>
	}
	if (button[1])
 1a2:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <_edata+0x1>
 1a6:	88 23       	and	r24, r24
 1a8:	21 f0       	breq	.+8      	; 0x1b2 <readport+0xa0>
	{
		indicator_1=0x02;
 1aa:	82 e0       	ldi	r24, 0x02	; 2
 1ac:	82 b9       	out	0x02, r24	; 2
		button[1]=0;
 1ae:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <_edata+0x1>
	}
	if (button[2])
 1b2:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <_edata+0x2>
 1b6:	88 23       	and	r24, r24
 1b8:	21 f0       	breq	.+8      	; 0x1c2 <readport+0xb0>
	{
		indicator_1=0x04;
 1ba:	84 e0       	ldi	r24, 0x04	; 4
 1bc:	82 b9       	out	0x02, r24	; 2
		button[2]=0;
 1be:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <_edata+0x2>
	}
	if (button[3])
 1c2:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <_edata+0x3>
 1c6:	88 23       	and	r24, r24
 1c8:	21 f0       	breq	.+8      	; 0x1d2 <readport+0xc0>
	{
		indicator_1=0x08;
 1ca:	88 e0       	ldi	r24, 0x08	; 8
 1cc:	82 b9       	out	0x02, r24	; 2
		button[3]=0;
 1ce:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <_edata+0x3>
	}
	if (button[4])
 1d2:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <_edata+0x4>
 1d6:	88 23       	and	r24, r24
 1d8:	21 f0       	breq	.+8      	; 0x1e2 <readport+0xd0>
	{
		indicator_1=0x10;
 1da:	80 e1       	ldi	r24, 0x10	; 16
 1dc:	82 b9       	out	0x02, r24	; 2
		button[4]=0;
 1de:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <_edata+0x4>
	}
	if (button[5])
 1e2:	80 91 05 02 	lds	r24, 0x0205	; 0x800205 <_edata+0x5>
 1e6:	88 23       	and	r24, r24
 1e8:	21 f0       	breq	.+8      	; 0x1f2 <readport+0xe0>
	{
		indicator_1=0x20;
 1ea:	80 e2       	ldi	r24, 0x20	; 32
 1ec:	82 b9       	out	0x02, r24	; 2
		button[5]=0;
 1ee:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <_edata+0x5>
	}
	if (button[6])
 1f2:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <_edata+0x6>
 1f6:	88 23       	and	r24, r24
 1f8:	21 f0       	breq	.+8      	; 0x202 <readport+0xf0>
	{
		indicator_1=0x40;
 1fa:	80 e4       	ldi	r24, 0x40	; 64
 1fc:	82 b9       	out	0x02, r24	; 2
		button[6]=0;
 1fe:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <_edata+0x6>
	}
	if (button[7])
 202:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <_edata+0x7>
 206:	88 23       	and	r24, r24
 208:	21 f0       	breq	.+8      	; 0x212 <readport+0x100>
	{
		indicator_1=0x80;
 20a:	80 e8       	ldi	r24, 0x80	; 128
 20c:	82 b9       	out	0x02, r24	; 2
		button[7]=0;
 20e:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <_edata+0x7>
	}
}
 212:	df 91       	pop	r29
 214:	cf 91       	pop	r28
 216:	1f 91       	pop	r17
 218:	0f 91       	pop	r16
 21a:	ff 90       	pop	r15
 21c:	ef 90       	pop	r14
 21e:	df 90       	pop	r13
 220:	08 95       	ret

00000222 <main>:
void port_init();
void readport();

int main(void)
{
	port_init();
 222:	73 df       	rcall	.-282    	; 0x10a <port_init>
    while (1) 
    {
		readport();	
 224:	76 df       	rcall	.-276    	; 0x112 <readport>
 226:	fe cf       	rjmp	.-4      	; 0x224 <main+0x2>

00000228 <_exit>:
 228:	f8 94       	cli

0000022a <__stop_program>:
 22a:	ff cf       	rjmp	.-2      	; 0x22a <__stop_program>
