
Cytron_motor_driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00000268  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000214  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000268  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000298  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  000002d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e6e  00000000  00000000  00000320  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000c91  00000000  00000000  0000118e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000427  00000000  00000000  00001e1f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000088  00000000  00000000  00002248  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005dc  00000000  00000000  000022d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001cb  00000000  00000000  000028ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00002a77  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	6c d0       	rcall	.+216    	; 0x1ce <main>
  f6:	8c c0       	rjmp	.+280    	; 0x210 <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <port_init>:
    }
}

void port_init()
{
	DDRA=0xFF;				//direction 1
  fa:	8f ef       	ldi	r24, 0xFF	; 255
  fc:	81 b9       	out	0x01, r24	; 1
	DDRH=0xFF;				//timer port
  fe:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
 102:	08 95       	ret

00000104 <pwm_init>:
}

void pwm_init()
{
	TCCR4A |= (1<<COM4A1)|(1<<COM4B1)|(1<<COM4C1)|(1<<WGM40);
 104:	e0 ea       	ldi	r30, 0xA0	; 160
 106:	f0 e0       	ldi	r31, 0x00	; 0
 108:	80 81       	ld	r24, Z
 10a:	89 6a       	ori	r24, 0xA9	; 169
 10c:	80 83       	st	Z, r24
	TCCR4B |= (1<<CS42)|(1<<CS40)|(1<<WGM42);
 10e:	e1 ea       	ldi	r30, 0xA1	; 161
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	80 81       	ld	r24, Z
 114:	8d 60       	ori	r24, 0x0D	; 13
 116:	80 83       	st	Z, r24
 118:	08 95       	ret

0000011a <motor1>:
}

void motor1(int sp_vect)
{
	sp_vect=limit_var(sp_vect,-255,255);
 11a:	09 2e       	mov	r0, r25
 11c:	00 0c       	add	r0, r0
 11e:	aa 0b       	sbc	r26, r26
 120:	bb 0b       	sbc	r27, r27
 122:	81 30       	cpi	r24, 0x01	; 1
 124:	2f ef       	ldi	r18, 0xFF	; 255
 126:	92 07       	cpc	r25, r18
 128:	a2 07       	cpc	r26, r18
 12a:	b2 07       	cpc	r27, r18
 12c:	24 f4       	brge	.+8      	; 0x136 <motor1+0x1c>
 12e:	81 e0       	ldi	r24, 0x01	; 1
 130:	9f ef       	ldi	r25, 0xFF	; 255
 132:	af ef       	ldi	r26, 0xFF	; 255
 134:	bf ef       	ldi	r27, 0xFF	; 255
 136:	8f 3f       	cpi	r24, 0xFF	; 255
 138:	91 05       	cpc	r25, r1
 13a:	a1 05       	cpc	r26, r1
 13c:	b1 05       	cpc	r27, r1
 13e:	29 f0       	breq	.+10     	; 0x14a <motor1+0x30>
 140:	24 f0       	brlt	.+8      	; 0x14a <motor1+0x30>
 142:	8f ef       	ldi	r24, 0xFF	; 255
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	a0 e0       	ldi	r26, 0x00	; 0
 148:	b0 e0       	ldi	r27, 0x00	; 0
 14a:	9c 01       	movw	r18, r24
	if (sp_vect<0)
 14c:	99 23       	and	r25, r25
 14e:	34 f4       	brge	.+12     	; 0x15c <motor1+0x42>
	{
		motor_dir |= (1<<PA0);
 150:	10 9a       	sbi	0x02, 0	; 2
		sp_vect=(-sp_vect);
 152:	22 27       	eor	r18, r18
 154:	33 27       	eor	r19, r19
 156:	28 1b       	sub	r18, r24
 158:	39 0b       	sbc	r19, r25
 15a:	07 c0       	rjmp	.+14     	; 0x16a <motor1+0x50>
	}
	else if (sp_vect>0)
 15c:	18 16       	cp	r1, r24
 15e:	19 06       	cpc	r1, r25
 160:	14 f4       	brge	.+4      	; 0x166 <motor1+0x4c>
	{
		motor_dir &= (~(1<<PA0));
 162:	10 98       	cbi	0x02, 0	; 2
 164:	02 c0       	rjmp	.+4      	; 0x16a <motor1+0x50>
	}
	else
	{
		sp_vect=0;
 166:	20 e0       	ldi	r18, 0x00	; 0
 168:	30 e0       	ldi	r19, 0x00	; 0
	}
	motor_pwm1=sp_vect;
 16a:	30 93 a9 00 	sts	0x00A9, r19	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
 16e:	20 93 a8 00 	sts	0x00A8, r18	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
 172:	08 95       	ret

00000174 <motor2>:
}

void motor2(int sp_vect)
{
	sp_vect=limit_var(sp_vect,-255,255);
 174:	09 2e       	mov	r0, r25
 176:	00 0c       	add	r0, r0
 178:	aa 0b       	sbc	r26, r26
 17a:	bb 0b       	sbc	r27, r27
 17c:	81 30       	cpi	r24, 0x01	; 1
 17e:	2f ef       	ldi	r18, 0xFF	; 255
 180:	92 07       	cpc	r25, r18
 182:	a2 07       	cpc	r26, r18
 184:	b2 07       	cpc	r27, r18
 186:	24 f4       	brge	.+8      	; 0x190 <motor2+0x1c>
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	9f ef       	ldi	r25, 0xFF	; 255
 18c:	af ef       	ldi	r26, 0xFF	; 255
 18e:	bf ef       	ldi	r27, 0xFF	; 255
 190:	8f 3f       	cpi	r24, 0xFF	; 255
 192:	91 05       	cpc	r25, r1
 194:	a1 05       	cpc	r26, r1
 196:	b1 05       	cpc	r27, r1
 198:	29 f0       	breq	.+10     	; 0x1a4 <motor2+0x30>
 19a:	24 f0       	brlt	.+8      	; 0x1a4 <motor2+0x30>
 19c:	8f ef       	ldi	r24, 0xFF	; 255
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	a0 e0       	ldi	r26, 0x00	; 0
 1a2:	b0 e0       	ldi	r27, 0x00	; 0
 1a4:	9c 01       	movw	r18, r24
	if (sp_vect<0)
 1a6:	99 23       	and	r25, r25
 1a8:	34 f4       	brge	.+12     	; 0x1b6 <motor2+0x42>
	{
		motor_dir |= (1<<PA1);
 1aa:	11 9a       	sbi	0x02, 1	; 2
		sp_vect=(-sp_vect);
 1ac:	22 27       	eor	r18, r18
 1ae:	33 27       	eor	r19, r19
 1b0:	28 1b       	sub	r18, r24
 1b2:	39 0b       	sbc	r19, r25
 1b4:	07 c0       	rjmp	.+14     	; 0x1c4 <motor2+0x50>
	}
	else if (sp_vect>0)
 1b6:	18 16       	cp	r1, r24
 1b8:	19 06       	cpc	r1, r25
 1ba:	14 f4       	brge	.+4      	; 0x1c0 <motor2+0x4c>
	{
		motor_dir &= (~(1<<PA1));
 1bc:	11 98       	cbi	0x02, 1	; 2
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <motor2+0x50>
	}
	else
	{
		sp_vect=0;
 1c0:	20 e0       	ldi	r18, 0x00	; 0
 1c2:	30 e0       	ldi	r19, 0x00	; 0
	}
	motor_pwm2=sp_vect;
 1c4:	30 93 ab 00 	sts	0x00AB, r19	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
 1c8:	20 93 aa 00 	sts	0x00AA, r18	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
 1cc:	08 95       	ret

000001ce <main>:
void pwm_init();
long limit_var(long in_var, long l_limit, long h_limit);

int main(void)
{
	port_init();
 1ce:	95 df       	rcall	.-214    	; 0xfa <port_init>
	pwm_init();
 1d0:	99 df       	rcall	.-206    	; 0x104 <pwm_init>
 1d2:	82 e3       	ldi	r24, 0x32	; 50
    while (1) 
    {
		motor1(50);
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	a1 df       	rcall	.-190    	; 0x11a <motor1>
 1d8:	82 e3       	ldi	r24, 0x32	; 50
		motor2(50);
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	cb df       	rcall	.-106    	; 0x174 <motor2>
 1de:	2f e3       	ldi	r18, 0x3F	; 63
 1e0:	8d e0       	ldi	r24, 0x0D	; 13
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1e2:	94 ee       	ldi	r25, 0xE4	; 228
 1e4:	21 50       	subi	r18, 0x01	; 1
 1e6:	80 40       	sbci	r24, 0x00	; 0
 1e8:	90 40       	sbci	r25, 0x00	; 0
 1ea:	e1 f7       	brne	.-8      	; 0x1e4 <main+0x16>
 1ec:	00 c0       	rjmp	.+0      	; 0x1ee <main+0x20>
 1ee:	00 00       	nop
 1f0:	8e ec       	ldi	r24, 0xCE	; 206
		_delay_ms(5000);
		motor1(-50);
 1f2:	9f ef       	ldi	r25, 0xFF	; 255
 1f4:	92 df       	rcall	.-220    	; 0x11a <motor1>
 1f6:	8e ec       	ldi	r24, 0xCE	; 206
		motor2(-50);
 1f8:	9f ef       	ldi	r25, 0xFF	; 255
 1fa:	bc df       	rcall	.-136    	; 0x174 <motor2>
 1fc:	2f e3       	ldi	r18, 0x3F	; 63
 1fe:	8d e0       	ldi	r24, 0x0D	; 13
 200:	94 ee       	ldi	r25, 0xE4	; 228
 202:	21 50       	subi	r18, 0x01	; 1
 204:	80 40       	sbci	r24, 0x00	; 0
 206:	90 40       	sbci	r25, 0x00	; 0
 208:	e1 f7       	brne	.-8      	; 0x202 <main+0x34>
 20a:	00 c0       	rjmp	.+0      	; 0x20c <main+0x3e>
 20c:	00 00       	nop
 20e:	e1 cf       	rjmp	.-62     	; 0x1d2 <main+0x4>

00000210 <_exit>:
 210:	f8 94       	cli

00000212 <__stop_program>:
 212:	ff cf       	rjmp	.-2      	; 0x212 <__stop_program>
